plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'com.bingbingpa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
	
	ignoreFailures = true
}

asciidoctor {
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir
	dependsOn test
}

asciidoctor.doFirst {
    println " @@@@@ start asciidoctor @@@@@ "
    //asciidoctor 실행전 기존에 생성된 API 문서 삭제
    delete file('src/main/resources/static/docs')
}
asciidoctor.doLast {
    println " @@@@@ finish asciidoctor @@@@@ "
}

task copyDocument(type: Copy) {
	println " @@@@@ copyDocument 실행 @@@@@ "
    dependsOn asciidoctor
    from file("build/asciidoc/html5/")
    into file("src/main/resources/static/docs")  
}

build {
    dependsOn copyDocument
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.5'
	compile group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.2.2.RELEASE'
	
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'com.h2database:h2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') 
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testCompile group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'
	
}